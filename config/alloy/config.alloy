logging {
	level  = "info"
	format = "logfmt"
}

// Monitor Grafana Agent
prometheus.scrape "scrape_agent" {
	scrape_interval = "5m"
	targets         = [{"__address__" = "localhost:12345"}]
	forward_to      = [prometheus.remote_write.local.receiver]
}

// container exporter
discovery.docker "docker" {
	host = "unix:///var/run/docker.sock"
}

prometheus.scrape "scrape_docker" {
	scrape_interval = "1m"
	targets         = discovery.docker.docker.targets
	forward_to      = [prometheus.remote_write.local.receiver]
}

// process exporter
prometheus.exporter.process "local" {
	procfs_path = "/host/proc"

	matcher {
		name    = "{{.ExeFull}}"
		cmdline = [".+"]
	}
}

prometheus.scrape "scrape_process" {
	scrape_interval = "5m"
	targets         = prometheus.exporter.process.local.targets
	forward_to      = [prometheus.remote_write.local.receiver]
}

// node exporter
prometheus.exporter.unix "local" {
	procfs_path = "/host/proc"
	sysfs_path  = "/host/sys"
	rootfs_path = "/rootfs"

	filesystem {
		mount_points_exclude = "^/(sys|proc|dev|host|etc)($|/)"
	}
}
// We need to change the output of prometheus.exporter.unix to be
// compatible with the node_exporter integration:
//
// * Change the job label to integrations/node_exporter.
// * Change the instance label to be HOSTNAME:LISTEN_PORT.
// See: https://github.com/grafana/agent/issues/3180
discovery.relabel "node_exporter" {
	targets = prometheus.exporter.unix.local.targets

	rule {
		action       = "replace"
		target_label = "job"
		replacement  = "integrations/node_exporter"
	}

	rule {
		action       = "replace"
		target_label = "nodename"
		replacement  = "localhost"
	}

	rule {
		action       = "replace"
		target_label = "__hostname__"
		replacement  = "localhost"
	}

	rule {
		action        = "replace"
		source_labels = ["__address__"]
		target_label  = "__port__"
		regex         = ".*:(.*)"
		replacement   = "$1"
	}

	rule {
		action        = "replace"
		source_labels = ["__hostname__", "__port__"]
		separator     = ":"
		target_label  = "instance"
	}
}

prometheus.scrape "scrape_unix" {
	scrape_interval = "1m"
	targets         = discovery.relabel.node_exporter.output
	forward_to      = [prometheus.remote_write.local.receiver]
}

// Logs
local.file_match "logs" {
	path_targets = [
		{__path__ = "/var/log/{syslog,messages,*.log}", job = "integrations/node_exporter"},
	]
}

loki.source.file "var_log" {
	targets    = local.file_match.logs.targets
	forward_to = [loki.write.local.receiver]
}

// Datasource's
prometheus.remote_write "local" {
	endpoint {
		url = "http://mimir:9009/api/v1/push"
	}
}

loki.write "local" {
	endpoint {
		url = "http://loki:3100/loki/api/v1/push"
	}
}
